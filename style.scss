$white: #ffffff;
$black: #000000;
$gray: #cccccc;
$yellow: #ffffba;
$green: #baffc9;
$blue: #bae1ff;
$red: #ffb3ba;
$pink: #ffc8e7;
$purple: #ba54d9;
$lightpink: #ffeff3;
$darkpink: #9b557d;
$lightgreen: #d4f7dc;

$bgc: $lightpink;
$btn-color: $pink;

@mixin btn-style {
	background-color: $white;
	border: 1px solid black;
	border-radius: 50px;
	font-size: 16px;
	box-shadow: 2px 2px 5px 2px gray;
	transition: all 0.3s ease-in-out;

	&.pressed {
		box-shadow: none;
	}
}

@mixin key-hover {
	@media (min-width: 768px) {
		&:not(:disabled):hover {
			cursor: pointer;
		}
	}
}

@mixin dialog {
	position: fixed;
	top: 0;
	left: 0;
	background-color: #fff;
	padding: 20px;
	margin: 20px auto;
	border: 1px solid #000;
	border-radius: 40px;
}

@keyframes drop {
	0% {
		transform: scale(1);
	}
	50% {
		transform: scale(0.9);
	}
	100% {
		transform: scale(1);
	}
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;

	&:focus-visible {
		outline: none;
	}
}

body {
	background-color: $bgc;
	margin: 10px;
	display: flex;
	flex-direction: column;
	align-items: center;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',
		'Helvetica Neue', sans-serif;

	button {
		@include btn-style;
		@include key-hover;
	}

	.modal {
		@include dialog;
		width: 90%;
		max-width: 400px;
		margin: 10px auto;
		padding: 15px;
		align-self: center;
		text-align: center;

		&::backdrop {
			background: rgba(0, 0, 0, 0.8);
		}

		> * {
			margin: 20px 10px;
		}

		.password {
			font-size: 30px;
			font-weight: 700;
			color: $darkpink;
			padding: 10px 0 20px;
		}

		.button-wrapper {
			display: flex;
			justify-content: space-around;
			gap: 10px;

			button {
				padding: 10px 20px;
			}

			.close-btn {
				background-color: $red;
				&:hover {
					background-color: darken($color: $red, $amount: 10%);
				}
			}

			.play-again-btn {
				background-color: $green;
				&:hover {
					background-color: darken($color: $green, $amount: 10%);
				}
			}
		}
	}

	.dialog {
		@include dialog;
		display: flex;
		flex-direction: column;
		align-items: center;
		z-index: 1;
		transition: transform 0.3s ease-in-out;
		transform: translateX(-160%);
		max-width: 90%;

		&.show {
			transform: translateX(0);
		}

		> * {
			margin: 10px;
		}

		.instruction-point {
			display: flex;
			align-items: center;
			justify-content: flex-start;
			width: 100%;
			gap: 30px;

			img {
				height: 50px;
			}
		}

		a {
			color: $darkpink;
			text-decoration: none;
			font-weight: 700;
		}

		button {
			padding: 10px 20px;
			&:hover {
				background-color: $lightgreen;
			}
		}
	}

	.header {
		display: flex;
		width: 100%;
		position: fixed;
		justify-content: space-around;

		.logo {
			display: flex;
			align-items: center;
			gap: 5px;

			h1 {
				margin: 0;
				color: $purple;
			}
		}

		button {
			padding: 10px 20px;
			&:hover {
				background-color: $lightgreen;
			}
		}
	}
	.output {
		margin: 20px;
		max-height: 44vh;
		overflow-y: auto;
		position: fixed;
		width: 100%;
		top: 50px;

		&:before {
			content: '';
			position: sticky;
			display: block;
			top: 0;
			left: 0;
			width: 100%;
			height: 50px;
			background: linear-gradient(to bottom, $bgc, transparent);
			pointer-events: none; // This allows clicks to pass through to the elements below
		}

		&:after {
			content: '';
			position: sticky;
			display: block;
			bottom: 25px;
			left: 0;
			width: 100%;
			height: 50px;
			background: linear-gradient(to top, $bgc, transparent);
			pointer-events: none; // This allows clicks to pass through to the elements below
		}

		.guess-word {
			margin-bottom: 10px;
			display: flex;
			justify-content: center;
			transition: all 1s ease-in-out;

			.letter {
				font-size: 20px;
				font-weight: 500;
				padding: 5px;
				border: 1px solid $black;
				border-radius: 50%;
				margin: 5px;
				width: 40px;
				height: 40px;
				text-align: center;
				background-color: $gray;
				animation: drop 0.2s ease;

				&.used {
					background-color: $yellow;
				}

				&.first {
					border-radius: 0 50% 50% 0;
				}

				&.last {
					border-radius: 50% 0 0 50%;
				}

				&.correct-order {
					background-color: $green;
				}

				&.middle-in-sequence {
					margin: 5px 0;
					border-radius: 0;
				}

				&.first-in-sequence {
					margin: 5px 0 5px 5px;
					border-top-right-radius: 0;
					border-bottom-right-radius: 0;
				}

				&.last-in-sequence {
					margin: 5px 5px 5px 0;
					border-top-left-radius: 0;
					border-bottom-left-radius: 0;
				}
			}
		}
	}

	.input-keyboard-wrapper {
		position: fixed;
		margin-bottom: 20px;
		bottom: 0;
		padding-top: 2px;
		background-color: $lightpink;

		.input-wrapper {
			display: flex;
			justify-content: space-around;
			width: 100%;
			margin-bottom: 10px;

			.input {
				@include btn-style;
				box-shadow: none;
				padding: 10px 20px;
				outline: none;
				transition: none;
				width: 65%;
				text-align: center;

				&:focus-visible {
					border: 2px solid black;
				}
			}

			.enter-btn {
				width: 30%;

				&:hover {
					background-color: $lightgreen;
				}
			}
		}

		.keyboard {
			display: flex;
			flex-direction: column;
			align-items: center;

			.keyboard-latin,
			.keyboard-polish {
				display: flex;
				justify-content: center;
				flex-wrap: wrap;

				&.qwerty {
					display: grid;
					grid-template-areas:
						'q q w w e e r r t t y y u u i i o o p p'
						'. a a s s d d f f g g h h j j k k l l .'
						'. . z z x x c c v v b b n n m m § § § §';
					grid-template-columns: repeat(20, 1fr);
					grid-template-rows: repeat(3, 1fr);

					#q-btn {
						grid-area: q;
					}
					#w-btn {
						grid-area: w;
					}
					#e-btn {
						grid-area: e;
					}
					#r-btn {
						grid-area: r;
					}
					#t-btn {
						grid-area: t;
					}
					#y-btn {
						grid-area: y;
					}
					#u-btn {
						grid-area: u;
					}
					#i-btn {
						grid-area: i;
					}
					#o-btn {
						grid-area: o;
					}
					#p-btn {
						grid-area: p;
					}
					#a-btn {
						grid-area: a;
					}
					#s-btn {
						grid-area: s;
					}
					#d-btn {
						grid-area: d;
					}
					#f-btn {
						grid-area: f;
					}
					#g-btn {
						grid-area: g;
					}
					#h-btn {
						grid-area: h;
					}
					#j-btn {
						grid-area: j;
					}
					#k-btn {
						grid-area: k;
					}
					#l-btn {
						grid-area: l;
					}
					#z-btn {
						grid-area: z;
					}
					#x-btn {
						grid-area: x;
					}
					#c-btn {
						grid-area: c;
					}
					#v-btn {
						grid-area: v;
					}
					#b-btn {
						grid-area: b;
					}
					#n-btn {
						grid-area: n;
					}
					#m-btn {
						grid-area: m;
					}
					#backspace-btn {
						grid-area: §;
					}
				}

				.key,
				.backspace-btn {
					width: 8vw;
					max-width: 50px;
					height: 50px;
					margin: 1vw;
					border-radius: 5px;
					font-size: 20px;
					background-color: $pink;

					&:not(:disabled):hover {
						background-color: darken($color: $pink, $amount: 10%);
					}

					&.backspace-btn {
						width: 18vw;
						max-width: 100px;
					}
				}
			}

			.key {
				&.letter {
					background-color: $gray;

					&:not(:disabled):hover {
						background-color: darken($color: $gray, $amount: 10%);
					}
				}

				&.used,
				&.correct-order {
					background-color: $green;

					&:not(:disabled):hover {
						background-color: darken($color: $green, $amount: 10%);
					}
				}
			}
		}
	}
}

//big mobile
@media (min-width: 640px) {
}

// tablet
@media (min-width: 768px) {
}
