$white: #ffffff;
$black: #000000;
$gray: #cccccc;
$yellow: #ffff00;
$green: #00ff00;

@mixin btn-style {
	padding: 10px;
	background-color: white;
	border: 1px solid black;
	border-radius: 50px;
	font-size: 20px;
	box-shadow: 2px 2px 5px 2px gray;
	transition: all 0.3s ease-in-out;

	&:hover {
		cursor: pointer;
		box-shadow: none;
		background-color: darken($color: $white, $amount: 10%);
	}
}

@keyframes press {
	0% {
		transform: scale(1);
	}
	50% {
		transform: scale(0.9);
	}
	100% {
		transform: scale(1);
	}
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	margin: 10px;
	display: flex;
	flex-direction: column;
	align-items: center;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',
		'Helvetica Neue', sans-serif;

	.header {
		display: flex;
		width: 100%;
		justify-content: space-between;

		h1 {
			margin: 0;
		}

		.start-btn {
			@include btn-style;
		}
	}
	.output {
		margin: 20px;
		max-height: 40vh;
		overflow-y: auto;
		position: relative;
		width: 100%;

		&:before {
			content: '';
			position: sticky;
			display: block;
			top: 0;
			left: 0;
			width: 100%;
			height: 50px;
			background: linear-gradient(to bottom, white, transparent);
			pointer-events: none; // This allows clicks to pass through to the elements below
		}

		.guess-word {
			margin-bottom: 10px;
			display: flex;
			justify-content: center;
			transition: all 1s ease-in-out;

			.letter {
				font-size: 20px;
				font-weight: 500;
				padding: 5px;
				border: 1px solid $black;
				border-radius: 50%;
				margin: 5px;
				width: 40px;
				height: 40px;
				text-align: center;
				background-color: $gray;
				animation: press 0.2s ease;

				&.used {
					background-color: $yellow;
				}

				&.first {
					border-radius: 0 50% 50% 0;
				}

				&.last {
					border-radius: 50% 0 0 50%;
				}

				&.correct-order {
					background-color: $green;
				}

				&.middle-in-sequence {
					margin: 5px 0;
					border-radius: 0;
				}

				&.first-in-sequence {
					margin: 5px 0 5px 5px;
					border-top-right-radius: 0;
					border-bottom-right-radius: 0;
				}

				&.last-in-sequence {
					margin: 5px 5px 5px 0;
					border-top-left-radius: 0;
					border-bottom-left-radius: 0;
				}
			}
		}
	}

	.input-wrapper {
		margin: 10px;
		display: flex;
		justify-content: space-around;
		width: 100%;

		& > * {
			@include btn-style;
			font-size: 16px;
		}

		.input {
			box-shadow: none;
			padding: 10px 20px;
			outline: none;
			transition: none;
			width: 65%;

			&:focus-visible {
				border: 2px solid black;
			}
		}

		.enter-btn {
			width: 30%;
		}
	}

	.keyboard {
		display: flex;
		flex-direction: column;
		align-items: center;

		.keyboard-latin,
		.keyboard-polish {
			display: flex;
			justify-content: center;
			flex-wrap: wrap;

			&.qwerty {
				display: grid;
				grid-template-areas:
					'q q w w e e r r t t y y u u i i o o p p'
					'. a a s s d d f f g g h h j j k k l l .'
					'. . z z x x c c v v b b n n m m § § § §';
				grid-template-columns: repeat(20, 1fr);
				grid-template-rows: repeat(3, 1fr);

				#q-btn {
					grid-area: q;
				}
				#w-btn {
					grid-area: w;
				}
				#e-btn {
					grid-area: e;
				}
				#r-btn {
					grid-area: r;
				}
				#t-btn {
					grid-area: t;
				}
				#y-btn {
					grid-area: y;
				}
				#u-btn {
					grid-area: u;
				}
				#i-btn {
					grid-area: i;
				}
				#o-btn {
					grid-area: o;
				}
				#p-btn {
					grid-area: p;
				}
				#a-btn {
					grid-area: a;
				}
				#s-btn {
					grid-area: s;
				}
				#d-btn {
					grid-area: d;
				}
				#f-btn {
					grid-area: f;
				}
				#g-btn {
					grid-area: g;
				}
				#h-btn {
					grid-area: h;
				}
				#j-btn {
					grid-area: j;
				}
				#k-btn {
					grid-area: k;
				}
				#l-btn {
					grid-area: l;
				}
				#z-btn {
					grid-area: z;
				}
				#x-btn {
					grid-area: x;
				}
				#c-btn {
					grid-area: c;
				}
				#v-btn {
					grid-area: v;
				}
				#b-btn {
					grid-area: b;
				}
				#n-btn {
					grid-area: n;
				}
				#m-btn {
					grid-area: m;
				}
				#backspace-btn {
					grid-area: §;
				}
			}

			.key,
			.backspace-btn {
				width: 8vw;
				height: 50px;
				margin: 1vw;
				border: 1px solid $black;
				border-radius: 5px;
				font-size: 20px;
				background-color: $white;
				box-shadow: 2px 2px 5px 2px gray;
				transition: all 0.3s ease-in-out;

				&.backspace-btn {
					width: 18vw;
				}

				&:hover {
					cursor: pointer;
					background-color: darken($color: $white, $amount: 10%);
					box-shadow: none;
				}

				&.pressed {
					box-shadow: none;
				}
			}
		}

		.key {
			&.letter {
				background-color: $gray;
				&:hover {
					background-color: darken($color: $gray, $amount: 10%);
				}
			}

			&.used,
			&.correct-order {
				background-color: $green;
				&:hover {
					background-color: darken($color: $green, $amount: 10%);
				}
			}
		}
	}
}

//big mobile
@media (min-width: 640px) {
}

// tablet
@media (min-width: 768px) {
}
